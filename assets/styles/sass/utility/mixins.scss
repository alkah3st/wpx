/**
 * Breakpoints
 */
@mixin breakpoint($point) {
	@if $point == "ultrawide" {
		@media only screen and (min-width: $viewport_ultrawide) { @content; }
	} @else if $point == "desktop" {
		@media only screen and (min-width: $viewport_desktop) { @content; }
	} @else if $point == "tablet" {
		@media only screen and (max-width: $viewport_tablet) { @content; }
	} @else if $point == "phablet" {
		@media only screen and (max-width: $viewport_phablet) { @content; }
	} @else if $point == "mobile" {
		@media only screen and (max-width: $viewport_mobile) { @content; }
	} @else {
		@media only screen and (max-width: $point) { @content; }
	}
}

/**
* Context
**/
@mixin context {
	margin: 0 auto;
	max-width: $context;
	width: 95%;
}

/**
 * Based on Sassbreak calc:
 * http://sassbreak.com/viewport-relative-headings-with-sass/
 */
@function px-to-vm($target) { 
	$vw-context: (1000*.01) * 1px;
	@return ($target/$vw-context) * 1vw;
}

/**
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Pixel-based size (px)
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px) optional
/// @param {Number}   $fallback    - Fallback for viewport-based units (default to $size)
/// @example scss - 5vw font size (with 50px fallback), minumum of 35px and maximum of 150px:
/// @include responsive-font(50px, 35px, 150px);
*/
@mixin font-size($size, $min: false, $max: false, $fallback: $size) {

	$vm: px-to-vm($size);

	$responsive-unitless: $vm / ($vm - $vm + 1);
	$dimension: if(unit($vm) == 'vh', 'height', 'width');
	$min-breakpoint: $min / $responsive-unitless * 100;

	@media (max-#{$dimension}: #{$min-breakpoint}) {
		font-size: $min;
	}

	@if $max {
		$max-breakpoint: $max / $responsive-unitless * 100;
		@media (min-#{$dimension}: #{$max-breakpoint}) {
			font-size: $max;
		}
	}

	font-size: $fallback; // fallback, defaults to size
	font-size: $vm;
}

/**
 * Background Retina Sprites
 * http://chrisltd.com/blog/2013/05/retina-images-sass/
 */
@mixin bg-retina($file, $type, $width, $height) {
	background-image: url("../images/bgs/" + $file + '.' + $type);
	@media only screen and (-webkit-min-device-pixel-ratio: 2),
		only screen and (-moz-min-device-pixel-ratio: 2),
		only screen and (-o-min-device-pixel-ratio: 2/1),
		only screen and (min-device-pixel-ratio: 2),
		only screen and (min-resolution: 192dpi),
		only screen and (min-resolution: 2dppx){
		& {
			background-image: url("../images/bgs/" + $file + '@2x.' + $type);
			-webkit-background-size: $width $height;
			-moz-background-size: $width $height;
			-o-background-size: $width $height;
			background-size: $width $height;
		}
	}
}